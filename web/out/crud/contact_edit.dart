// Auto-generated from contact_edit.html.
// DO NOT EDIT.

library contact_edit;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:web_ui/web_ui.dart';





class ContactEdit extends WebComponent {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("contact-edit");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <div>
          <br>
          <label for="editer-nom">Name</label>
          <input id="editer-nom" type="text" size="32">
          <br>
          <label for="editer-prenom">prenom</label>
          <input id="editer-prenom" type="text" size="32">
          <br>
          <br>
          <label for="editer-email">Email</label>
          <input id="editer-email" type="text" size="32">
          <br>
          <br>
          <label for="editer-adresse">Adresse</label>
          <textarea id="editer-adresse" rows="4" cols="30"></textarea>
          <br>
          <button>Miseajour</button>
           <span id="editer-message"></span>
        </div>
      ''', treeSanitizer: autogenerated.nullTreeSanitizer);
  autogenerated.ButtonElement __e23;
  autogenerated.InputElement __e19, __e20, __e21;
  autogenerated.Template __t;
  autogenerated.TextAreaElement __e22;

  void created_autogenerated() {
    var __root = createShadowRoot("contact-edit");
    setScopedCss("contact-edit", new autogenerated.ScopedCssMapper({"contact-edit":"[is=\"contact-edit\"]"}));
    _css = getScopedCss("contact-edit");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e19 = __root.nodes[1].nodes[5];
    __t.oneWayBind(() =>  contact.nom , (e) { if (__e19.value != e) __e19.value = e; }, false, false);
    __e20 = __root.nodes[1].nodes[11];
    __t.oneWayBind(() =>  contact.prenom , (e) { if (__e20.value != e) __e20.value = e; }, false, false);
    __e21 = __root.nodes[1].nodes[19];
    __t.oneWayBind(() =>  contact.email , (e) { if (__e21.value != e) __e21.value = e; }, false, false);
    __e22 = __root.nodes[1].nodes[27];
    __t.oneWayBind(() =>  contact.adresse , (e) { if (__e22.value != e) __e22.value = e; }, false, false);
    __e23 = __root.nodes[1].nodes[31];
    __t.listen(__e23.onClick, ($event) { update(); });
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e19 = __e20 = __e21 = __e22 = __e23 = null;
  }

  /** Original code from the component. */

  ContactList contactlist;
  Contact contact;

  update() {
    InputElement nom = query("#editer-nom");
    InputElement prenom = query("#editer-prenom");
    InputElement email = query("#editer-email");
    TextAreaElement adresse = query("#editer-adresse");
    Element message = query("#editer-message");
    var error = false;
    message.text = '';
    if (nom.value.trim() == '' || prenom.value.trim() == '' || email.value.trim() == '' || adresse.value.trim() == '' ) {
      message.text = 'Veuiller remplire les Champs Obligatoires ${message.text}';
      error = true;
    }
    else{
    
    contact.nom = nom.value;
    contact.prenom = prenom.value;
    contact.email = email.value;
    contact.adresse = adresse.value;
    contactlist.order();
    message.text = 'Contact ajout√©';
    var contactTable = query('#contact-table').xtag;
    contactTable.showEditContact = false;
   }
  }
}
//# sourceMappingURL=contact_edit.dart.map